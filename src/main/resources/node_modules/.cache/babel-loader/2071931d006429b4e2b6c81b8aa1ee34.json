{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\karti\\\\Desktop\\\\cse331\\\\cse331-18au-kartikar\\\\src\\\\main\\\\resources\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\karti\\\\Desktop\\\\cse331\\\\cse331-18au-kartikar\\\\src\\\\main\\\\resources\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\karti\\\\Desktop\\\\cse331\\\\cse331-18au-kartikar\\\\src\\\\main\\\\resources\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\karti\\\\Desktop\\\\cse331\\\\cse331-18au-kartikar\\\\src\\\\main\\\\resources\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\karti\\\\Desktop\\\\cse331\\\\cse331-18au-kartikar\\\\src\\\\main\\\\resources\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\karti\\\\Desktop\\\\cse331\\\\cse331-18au-kartikar\\\\src\\\\main\\\\resources\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\karti\\\\Desktop\\\\cse331\\\\cse331-18au-kartikar\\\\src\\\\main\\\\resources\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  // Constructor for the app\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      to: \"to\",\n      from: \"from\",\n      loaded: 0\n    };\n\n    _this.initMap.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.initMap();\n\n    return _this;\n  } //drawing path on the canvas\n\n\n  _createClass(App, [{\n    key: \"draw\",\n    value: function draw(response) {\n      var img = document.getElementById(\"theImg\");\n      var cnvs = this.refs.canvas;\n      cnvs.style.position = \"absolute\";\n      cnvs.style.left = img.offsetLeft + \"px\";\n      cnvs.style.top = img.offsetTop + \"px\"; //Draw circle on to\n\n      var to = response[response.length - 1][\"to\"][\"label\"];\n      var ctx = cnvs.getContext(\"2d\"); // Clear the canvas\n\n      ctx.canvas.width = ctx.canvas.width;\n      var lat = to.substring(0, to.indexOf(\",\"));\n      var long = to.substring(to.indexOf(\",\") + 1, to.length - 1);\n      ctx.beginPath();\n      ctx.arc(lat / 1, long / 1, 9, 0, 2 * Math.PI, false);\n      ctx.strokeStyle = 'red';\n      ctx.lineWidth = 2;\n      ctx.stroke();\n      ctx.closePath(); //Draw circle on from\n\n      var label = response[0][\"from\"][\"label\"];\n      var fromLat = label.substring(0, label.indexOf(\",\"));\n      var fromLong = label.substring(label.indexOf(\",\") + 1, label.length - 1);\n      ctx.beginPath();\n      ctx.arc(fromLat / 1, fromLong / 1, 9, 0, 2 * Math.PI, false);\n      ctx.strokeStyle = 'red';\n      ctx.stroke(); //Scroll to starting point\n      //-500 to center point on graph\n\n      window.scroll(fromLat / 1 - 500, fromLong / 1 - 500);\n      ctx.closePath(); //Draw lines\n\n      ctx.beginPath();\n      ctx.moveTo(parseInt(fromLat), parseInt(fromLong));\n      ctx.strokeStyle = 'red';\n      ctx.lineWidth = 10;\n\n      for (var i = 0; i < response.length; i++) {\n        ctx.strokeStyle = 'blue';\n        to = response[i][\"to\"][\"label\"];\n        ctx.lineJoin = 'round';\n        lat = to.substring(0, to.indexOf(\",\"));\n        long = to.substring(to.indexOf(\",\") + 1, to.length - 1);\n        ctx.lineTo(parseInt(lat), parseInt(long));\n      }\n\n      ctx.stroke();\n      ctx.closePath();\n    } // handle changing of to dropdown menu\n\n  }, {\n    key: \"handleToChange\",\n    value: function handleToChange(e) {\n      this.setState({\n        to: e.target.value\n      });\n    } // handle changing of from dropdown menu\n\n  }, {\n    key: \"handleFromChange\",\n    value: function handleFromChange(e) {\n      this.setState({\n        from: e.target.value\n      });\n    } // Initialise map on startup\n\n  }, {\n    key: \"initMap\",\n    value: function initMap() {\n      var _this2 = this;\n\n      if (this.state.loaded < 2) {\n        try {\n          fetch('http://localhost:8080/buildMap', {\n            method: 'get'\n          }).then(function (res) {\n            if (!res.ok) {\n              throw res;\n            }\n\n            return res;\n          });\n          fetch('http://localhost:8080/buildings', {\n            method: 'get'\n          }).then(function (res) {\n            if (!res.ok) {\n              throw res;\n            }\n\n            return res;\n          }).then(function (response) {\n            return response.json();\n          }).then(function (response) {\n            for (var i = 0; i < response.length; i++) {\n              var option = document.createElement(\"OPTION\");\n              var option2 = document.createElement(\"OPTION\");\n              option.innerHTML = response[i];\n              option2.innerHTML = response[i];\n              option.value = response[i];\n              option2.value = response[i]; //Add the Option element to DropDownList.\n\n              document.getElementById(\"fromMenu\").options.add(option);\n              document.getElementById(\"toMenu\").options.add(option2);\n            }\n\n            _this2.setState({\n              to: response[0]\n            });\n\n            _this2.setState({\n              from: response[0]\n            });\n\n            _this2.setState({\n              loaded: _this2.state.loaded + 1\n            });\n          });\n        } catch (e) {}\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar\",\n        id: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"forms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"form_label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"from: \"), React.createElement(\"select\", {\n        name: \"From\",\n        id: \"fromMenu\",\n        value: this.state.from,\n        onChange: this.handleFromChange.bind(this),\n        onClick: this.initMap.bind(this),\n        className: \"custom-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), \"\\xA0\", React.createElement(\"label\", {\n        className: \"form_label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"To: \"), React.createElement(\"select\", {\n        name: \"To\",\n        id: \"toMenu\",\n        value: this.state.to,\n        onChange: this.handleToChange.bind(this),\n        onClick: this.initMap.bind(this),\n        className: \"custom-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), \"\\xA0\", React.createElement(\"input\", {\n        type: \"button\",\n        className: \"button-submit\",\n        onClick: getPath.bind(this),\n        value: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"button\",\n        className: \"button-submit\",\n        onClick: rel,\n        value: \"reset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: \"theImg\",\n        src: require('./img/campus_map.jpg'),\n        className: \"images\",\n        alt: \"alternate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        id: \"myCanvas\",\n        width: \"4330px\",\n        height: \"2964px\",\n        ref: \"canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }))); // Get path from server and draw on map\n\n      function getPath() {\n        var _this3 = this;\n\n        try {\n          if (!(this.state.from.trim() === this.state.to.trim())) {\n            fetch('http://localhost:8080/findPath?From=' + this.state.from + '&To=' + this.state.to, {\n              method: 'get'\n            }).then(function (res) {\n              if (!res.ok) {\n                throw res;\n              }\n\n              return res;\n            }).then(function (response) {\n              return response.json();\n            }).then(function (response) {\n              _this3.draw(response);\n            });\n          } else {\n            alert(\"Please select different to and from locations\");\n          }\n        } catch (e) {}\n      } // Resetting the page\n\n\n      function rel() {\n        window.location.reload(false);\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\karti\\Desktop\\cse331\\cse331-18au-kartikar\\src\\main\\resources\\src\\App.js"],"names":["React","Component","App","props","state","to","from","loaded","initMap","bind","response","img","document","getElementById","cnvs","refs","canvas","style","position","left","offsetLeft","top","offsetTop","length","ctx","getContext","width","lat","substring","indexOf","long","beginPath","arc","Math","PI","strokeStyle","lineWidth","stroke","closePath","label","fromLat","fromLong","window","scroll","moveTo","parseInt","i","lineJoin","lineTo","e","setState","target","value","fetch","method","then","res","ok","json","option","createElement","option2","innerHTML","options","add","handleFromChange","handleToChange","getPath","rel","require","trim","draw","alert","location","reload"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;;IAEMC,G;;;;;AAEF;AACA,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,EAAE,EAAE,IADK;AAETC,MAAAA,IAAI,EAAE,MAFG;AAGTC,MAAAA,MAAM,EAAE;AAHC,KAAb;;AAKA,UAAKC,OAAL,CAAaC,IAAb;;AACA,UAAKD,OAAL;;AARe;AASlB,G,CAED;;;;;yBACKE,Q,EAAU;AACX,UAAIC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAV;AACA,UAAIC,IAAI,GAAG,KAAKC,IAAL,CAAUC,MAArB;AACAF,MAAAA,IAAI,CAACG,KAAL,CAAWC,QAAX,GAAsB,UAAtB;AACAJ,MAAAA,IAAI,CAACG,KAAL,CAAWE,IAAX,GAAkBR,GAAG,CAACS,UAAJ,GAAiB,IAAnC;AACAN,MAAAA,IAAI,CAACG,KAAL,CAAWI,GAAX,GAAiBV,GAAG,CAACW,SAAJ,GAAgB,IAAjC,CALW,CAMX;;AACA,UAAIjB,EAAE,GAAGK,QAAQ,CAACA,QAAQ,CAACa,MAAT,GAAkB,CAAnB,CAAR,CAA8B,IAA9B,EAAoC,OAApC,CAAT;AACA,UAAIC,GAAG,GAAGV,IAAI,CAACW,UAAL,CAAgB,IAAhB,CAAV,CARW,CASX;;AACAD,MAAAA,GAAG,CAACR,MAAJ,CAAWU,KAAX,GAAmBF,GAAG,CAACR,MAAJ,CAAWU,KAA9B;AACA,UAAIC,GAAG,GAAGtB,EAAE,CAACuB,SAAH,CAAa,CAAb,EAAgBvB,EAAE,CAACwB,OAAH,CAAW,GAAX,CAAhB,CAAV;AACA,UAAIC,IAAI,GAAGzB,EAAE,CAACuB,SAAH,CAAavB,EAAE,CAACwB,OAAH,CAAW,GAAX,IAAkB,CAA/B,EAAkCxB,EAAE,CAACkB,MAAH,GAAY,CAA9C,CAAX;AACAC,MAAAA,GAAG,CAACO,SAAJ;AACAP,MAAAA,GAAG,CAACQ,GAAJ,CAAQL,GAAG,GAAG,CAAd,EAAiBG,IAAI,GAAG,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,IAAIG,IAAI,CAACC,EAA1C,EAA8C,KAA9C;AACAV,MAAAA,GAAG,CAACW,WAAJ,GAAkB,KAAlB;AACAX,MAAAA,GAAG,CAACY,SAAJ,GAAgB,CAAhB;AACAZ,MAAAA,GAAG,CAACa,MAAJ;AACAb,MAAAA,GAAG,CAACc,SAAJ,GAlBW,CAoBX;;AACA,UAAIC,KAAK,GAAG7B,QAAQ,CAAC,CAAD,CAAR,CAAY,MAAZ,EAAoB,OAApB,CAAZ;AACA,UAAI8B,OAAO,GAAGD,KAAK,CAACX,SAAN,CAAgB,CAAhB,EAAmBW,KAAK,CAACV,OAAN,CAAc,GAAd,CAAnB,CAAd;AACA,UAAIY,QAAQ,GAAGF,KAAK,CAACX,SAAN,CAAgBW,KAAK,CAACV,OAAN,CAAc,GAAd,IAAqB,CAArC,EAAwCU,KAAK,CAAChB,MAAN,GAAe,CAAvD,CAAf;AACAC,MAAAA,GAAG,CAACO,SAAJ;AACAP,MAAAA,GAAG,CAACQ,GAAJ,CAAQQ,OAAO,GAAG,CAAlB,EAAqBC,QAAQ,GAAG,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,IAAIR,IAAI,CAACC,EAAlD,EAAsD,KAAtD;AACAV,MAAAA,GAAG,CAACW,WAAJ,GAAkB,KAAlB;AACAX,MAAAA,GAAG,CAACa,MAAJ,GA3BW,CA4BX;AACA;;AACAK,MAAAA,MAAM,CAACC,MAAP,CAAcH,OAAO,GAAG,CAAV,GAAc,GAA5B,EAAiCC,QAAQ,GAAG,CAAX,GAAe,GAAhD;AACAjB,MAAAA,GAAG,CAACc,SAAJ,GA/BW,CAgCX;;AACAd,MAAAA,GAAG,CAACO,SAAJ;AACAP,MAAAA,GAAG,CAACoB,MAAJ,CAAWC,QAAQ,CAACL,OAAD,CAAnB,EAA8BK,QAAQ,CAACJ,QAAD,CAAtC;AACAjB,MAAAA,GAAG,CAACW,WAAJ,GAAkB,KAAlB;AACAX,MAAAA,GAAG,CAACY,SAAJ,GAAgB,EAAhB;;AACA,WAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpC,QAAQ,CAACa,MAA7B,EAAqCuB,CAAC,EAAtC,EAA0C;AACtCtB,QAAAA,GAAG,CAACW,WAAJ,GAAkB,MAAlB;AACA9B,QAAAA,EAAE,GAAGK,QAAQ,CAACoC,CAAD,CAAR,CAAY,IAAZ,EAAkB,OAAlB,CAAL;AACAtB,QAAAA,GAAG,CAACuB,QAAJ,GAAe,OAAf;AACApB,QAAAA,GAAG,GAAGtB,EAAE,CAACuB,SAAH,CAAa,CAAb,EAAgBvB,EAAE,CAACwB,OAAH,CAAW,GAAX,CAAhB,CAAN;AACAC,QAAAA,IAAI,GAAGzB,EAAE,CAACuB,SAAH,CAAavB,EAAE,CAACwB,OAAH,CAAW,GAAX,IAAkB,CAA/B,EAAkCxB,EAAE,CAACkB,MAAH,GAAY,CAA9C,CAAP;AACAC,QAAAA,GAAG,CAACwB,MAAJ,CAAWH,QAAQ,CAAClB,GAAD,CAAnB,EAA0BkB,QAAQ,CAACf,IAAD,CAAlC;AACH;;AACDN,MAAAA,GAAG,CAACa,MAAJ;AACAb,MAAAA,GAAG,CAACc,SAAJ;AACH,K,CAED;;;;mCACeW,C,EAAG;AACd,WAAKC,QAAL,CAAc;AAAC7C,QAAAA,EAAE,EAAE4C,CAAC,CAACE,MAAF,CAASC;AAAd,OAAd;AACH,K,CAED;;;;qCACiBH,C,EAAG;AAChB,WAAKC,QAAL,CAAc;AAAC5C,QAAAA,IAAI,EAAE2C,CAAC,CAACE,MAAF,CAASC;AAAhB,OAAd;AAEH,K,CAED;;;;8BACU;AAAA;;AACN,UAAI,KAAKhD,KAAL,CAAWG,MAAX,GAAoB,CAAxB,EAA2B;AACvB,YAAI;AACA8C,UAAAA,KAAK,CAAC,gCAAD,EAAmC;AACpCC,YAAAA,MAAM,EAAE;AAD4B,WAAnC,CAAL,CAEGC,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACX,gBAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACT,oBAAMD,GAAN;AACH;;AACD,mBAAOA,GAAP;AACH,WAPD;AAQAH,UAAAA,KAAK,CAAC,iCAAD,EAAoC;AACrCC,YAAAA,MAAM,EAAE;AAD6B,WAApC,CAAL,CAEGC,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACX,gBAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACT,oBAAMD,GAAN;AACH;;AACD,mBAAOA,GAAP;AACH,WAPD,EAOGD,IAPH,CAOQ,UAAA7C,QAAQ;AAAA,mBAAIA,QAAQ,CAACgD,IAAT,EAAJ;AAAA,WAPhB,EAQKH,IARL,CAQU,UAAA7C,QAAQ,EAAI;AACd,iBAAK,IAAIoC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpC,QAAQ,CAACa,MAA7B,EAAqCuB,CAAC,EAAtC,EAA0C;AACtC,kBAAIa,MAAM,GAAG/C,QAAQ,CAACgD,aAAT,CAAuB,QAAvB,CAAb;AACA,kBAAIC,OAAO,GAAGjD,QAAQ,CAACgD,aAAT,CAAuB,QAAvB,CAAd;AAEAD,cAAAA,MAAM,CAACG,SAAP,GAAmBpD,QAAQ,CAACoC,CAAD,CAA3B;AACAe,cAAAA,OAAO,CAACC,SAAR,GAAoBpD,QAAQ,CAACoC,CAAD,CAA5B;AAEAa,cAAAA,MAAM,CAACP,KAAP,GAAe1C,QAAQ,CAACoC,CAAD,CAAvB;AACAe,cAAAA,OAAO,CAACT,KAAR,GAAgB1C,QAAQ,CAACoC,CAAD,CAAxB,CARsC,CAUtC;;AACAlC,cAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCkD,OAApC,CAA4CC,GAA5C,CAAgDL,MAAhD;AACA/C,cAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCkD,OAAlC,CAA0CC,GAA1C,CAA8CH,OAA9C;AACH;;AACD,YAAA,MAAI,CAACX,QAAL,CAAc;AAAC7C,cAAAA,EAAE,EAAEK,QAAQ,CAAC,CAAD;AAAb,aAAd;;AACA,YAAA,MAAI,CAACwC,QAAL,CAAc;AAAC5C,cAAAA,IAAI,EAAEI,QAAQ,CAAC,CAAD;AAAf,aAAd;;AACA,YAAA,MAAI,CAACwC,QAAL,CAAc;AAAC3C,cAAAA,MAAM,EAAE,MAAI,CAACH,KAAL,CAAWG,MAAX,GAAoB;AAA7B,aAAd;AAEH,WA3BL;AA4BH,SArCD,CAqCE,OAAO0C,CAAP,EAAU,CAEX;AACJ;AAEJ;;;6BAGQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,EAAE,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAE,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,EAAE,EAAC,UAAvB;AACQ,QAAA,KAAK,EAAE,KAAK7C,KAAL,CAAWE,IAD1B;AAEQ,QAAA,QAAQ,EAAE,KAAK2D,gBAAL,CAAsBxD,IAAtB,CAA2B,IAA3B,CAFlB;AAGQ,QAAA,OAAO,EAAE,KAAKD,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAHjB;AAIQ,QAAA,SAAS,EAAE,iBAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,UAUI;AAAO,QAAA,SAAS,EAAE,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,EAWI;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,EAAE,EAAC,QAArB;AAA8B,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,EAAhD;AACQ,QAAA,QAAQ,EAAE,KAAK6D,cAAL,CAAoBzD,IAApB,CAAyB,IAAzB,CADlB;AAEQ,QAAA,OAAO,EAAE,KAAKD,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAFjB;AAGQ,QAAA,SAAS,EAAE,iBAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,UAiBI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAE,eAAhC;AACO,QAAA,OAAO,EAAE0D,OAAO,CAAC1D,IAAR,CAAa,IAAb,CADhB;AAEO,QAAA,KAAK,EAAC,QAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBJ,EAoBI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAE,eAAhC;AACO,QAAA,OAAO,EAAE2D,GADhB;AACqB,QAAA,KAAK,EAAC,OAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBJ,CADJ,CADJ,CADJ,EA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7BJ,EA8BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9BJ,EA+BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,EAAE,EAAC,QAAR;AAAiB,QAAA,GAAG,EAAEC,OAAO,CAAC,sBAAD,CAA7B;AACK,QAAA,SAAS,EAAE,QADhB;AAC0B,QAAA,GAAG,EAAC,WAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGI;AAAQ,QAAA,EAAE,EAAC,UAAX;AAAsB,QAAA,KAAK,EAAC,QAA5B;AAAqC,QAAA,MAAM,EAAC,QAA5C;AACQ,QAAA,GAAG,EAAC,QADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CA/BJ,CADJ,CADK,CA2CL;;AACA,eAASF,OAAT,GAAmB;AAAA;;AACf,YAAI;AACA,cAAI,EAAE,KAAK/D,KAAL,CAAWE,IAAX,CAAgBgE,IAAhB,OAA2B,KAAKlE,KAAL,CAAWC,EAAX,CAAciE,IAAd,EAA7B,CAAJ,EAAwD;AACpDjB,YAAAA,KAAK,CAAC,yCAAyC,KAAKjD,KAAL,CAAWE,IAApD,GAA2D,MAA3D,GAAoE,KAAKF,KAAL,CAAWC,EAAhF,EAAoF;AACrFiD,cAAAA,MAAM,EAAE;AAD6E,aAApF,CAAL,CAGGC,IAHH,CAGQ,UAAAC,GAAG,EAAI;AACX,kBAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACT,sBAAMD,GAAN;AACH;;AACD,qBAAOA,GAAP;AACH,aARD,EAQGD,IARH,CAQQ,UAAA7C,QAAQ;AAAA,qBAAIA,QAAQ,CAACgD,IAAT,EAAJ;AAAA,aARhB,EASKH,IATL,CASU,UAAA7C,QAAQ,EAAI;AACd,cAAA,MAAI,CAAC6D,IAAL,CAAU7D,QAAV;AACH,aAXL;AAYH,WAbD,MAaO;AACH8D,YAAAA,KAAK,CAAC,+CAAD,CAAL;AACH;AACJ,SAjBD,CAiBE,OAAOvB,CAAP,EAAU,CAEX;AAEJ,OAlEI,CAqEL;;;AACA,eAASmB,GAAT,GAAe;AACX1B,QAAAA,MAAM,CAAC+B,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACH;AAEJ;;;;EArMazE,S;;AAwMlB,eAAeC,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nclass App extends Component {\n\n    // Constructor for the app\n    constructor(props) {\n        super(props);\n        this.state = {\n            to: \"to\",\n            from: \"from\",\n            loaded: 0,\n        };\n        this.initMap.bind(this);\n        this.initMap();\n    }\n\n    //drawing path on the canvas\n    draw(response) {\n        var img = document.getElementById(\"theImg\");\n        var cnvs = this.refs.canvas;\n        cnvs.style.position = \"absolute\";\n        cnvs.style.left = img.offsetLeft + \"px\";\n        cnvs.style.top = img.offsetTop + \"px\";\n        //Draw circle on to\n        var to = response[response.length - 1][\"to\"][\"label\"];\n        var ctx = cnvs.getContext(\"2d\");\n        // Clear the canvas\n        ctx.canvas.width = ctx.canvas.width;\n        var lat = to.substring(0, to.indexOf(\",\"));\n        var long = to.substring(to.indexOf(\",\") + 1, to.length - 1);\n        ctx.beginPath();\n        ctx.arc(lat / 1, long / 1, 9, 0, 2 * Math.PI, false);\n        ctx.strokeStyle = 'red';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n        ctx.closePath();\n\n        //Draw circle on from\n        var label = response[0][\"from\"][\"label\"];\n        var fromLat = label.substring(0, label.indexOf(\",\"));\n        var fromLong = label.substring(label.indexOf(\",\") + 1, label.length - 1);\n        ctx.beginPath();\n        ctx.arc(fromLat / 1, fromLong / 1, 9, 0, 2 * Math.PI, false);\n        ctx.strokeStyle = 'red';\n        ctx.stroke();\n        //Scroll to starting point\n        //-500 to center point on graph\n        window.scroll(fromLat / 1 - 500, fromLong / 1 - 500);\n        ctx.closePath();\n        //Draw lines\n        ctx.beginPath();\n        ctx.moveTo(parseInt(fromLat), parseInt(fromLong));\n        ctx.strokeStyle = 'red';\n        ctx.lineWidth = 10;\n        for (var i = 0; i < response.length; i++) {\n            ctx.strokeStyle = 'blue';\n            to = response[i][\"to\"][\"label\"];\n            ctx.lineJoin = 'round';\n            lat = to.substring(0, to.indexOf(\",\"));\n            long = to.substring(to.indexOf(\",\") + 1, to.length - 1);\n            ctx.lineTo(parseInt(lat), parseInt(long));\n        }\n        ctx.stroke();\n        ctx.closePath();\n    }\n\n    // handle changing of to dropdown menu\n    handleToChange(e) {\n        this.setState({to: e.target.value});\n    }\n\n    // handle changing of from dropdown menu\n    handleFromChange(e) {\n        this.setState({from: e.target.value});\n\n    }\n\n    // Initialise map on startup\n    initMap() {\n        if (this.state.loaded < 2) {\n            try {\n                fetch('http://localhost:8080/buildMap', {\n                    method: 'get'\n                }).then(res => {\n                    if (!res.ok) {\n                        throw res;\n                    }\n                    return res;\n                });\n                fetch('http://localhost:8080/buildings', {\n                    method: 'get'\n                }).then(res => {\n                    if (!res.ok) {\n                        throw res;\n                    }\n                    return res;\n                }).then(response => response.json())\n                    .then(response => {\n                        for (var i = 0; i < response.length; i++) {\n                            var option = document.createElement(\"OPTION\");\n                            var option2 = document.createElement(\"OPTION\");\n\n                            option.innerHTML = response[i];\n                            option2.innerHTML = response[i];\n\n                            option.value = response[i];\n                            option2.value = response[i];\n\n                            //Add the Option element to DropDownList.\n                            document.getElementById(\"fromMenu\").options.add(option);\n                            document.getElementById(\"toMenu\").options.add(option2);\n                        }\n                        this.setState({to: response[0]});\n                        this.setState({from: response[0]});\n                        this.setState({loaded: this.state.loaded + 1})\n\n                    })\n            } catch (e) {\n\n            }\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"navbar\" id=\"top\">\n                    <div className=\"login-container\">\n                        <form className={\"forms\"}>\n                            <label className={\"form_label\"}>from: </label>\n                            <select name=\"From\" id=\"fromMenu\"\n                                    value={this.state.from}\n                                    onChange={this.handleFromChange.bind(this)}\n                                    onClick={this.initMap.bind(this)}\n                                    className={\"custom-dropdown\"}>\n\n                            </select>\n                            &nbsp;\n                            <label className={\"form_label\"}>To: </label>\n                            <select name=\"To\" id=\"toMenu\" value={this.state.to}\n                                    onChange={this.handleToChange.bind(this)}\n                                    onClick={this.initMap.bind(this)}\n                                    className={\"custom-dropdown\"}>\n                            </select>\n                            &nbsp;\n                            <input type=\"button\" className={\"button-submit\"}\n                                   onClick={getPath.bind(this)}\n                                   value=\"submit\"/>\n                            <input type=\"button\" className={\"button-submit\"}\n                                   onClick={rel} value=\"reset\"/>\n\n                        </form>\n                    </div>\n                </div>\n                <br/>\n                <br/>\n                <div>\n                    <img id=\"theImg\" src={require('./img/campus_map.jpg')}\n                         className={\"images\"} alt=\"alternate\"/>\n                    <canvas id='myCanvas' width='4330px' height='2964px'\n                            ref=\"canvas\"/>\n\n                </div>\n\n            </div>);\n\n        // Get path from server and draw on map\n        function getPath() {\n            try {\n                if (!(this.state.from.trim() === this.state.to.trim())) {\n                    fetch('http://localhost:8080/findPath?From=' + this.state.from + '&To=' + this.state.to, {\n                        method: 'get'\n\n                    }).then(res => {\n                        if (!res.ok) {\n                            throw res;\n                        }\n                        return res;\n                    }).then(response => response.json())\n                        .then(response => {\n                            this.draw(response)\n                        })\n                } else {\n                    alert(\"Please select different to and from locations\");\n                }\n            } catch (e) {\n\n            }\n\n        }\n\n\n        // Resetting the page\n        function rel() {\n            window.location.reload(false);\n        }\n\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}